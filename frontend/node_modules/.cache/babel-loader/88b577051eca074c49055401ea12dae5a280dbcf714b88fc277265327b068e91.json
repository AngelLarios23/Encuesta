{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\4 cuatrimestre\\\\Aplicacion web\\\\ProyectoEncuetas\\\\Encuesta4.1\\\\Encuesta\\\\frontend\\\\src\\\\compontentes\\\\integradora.js\",\n  _s = $RefreshSig$();\nimport \"../Estilos/integradora.css\"; // Importa los estilos correctamente\nimport { Card, Container, Form, Row, Col, Button } from 'react-bootstrap';\nimport { useState } from 'react';\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Integradora() {\n  _s();\n  const [cita, setCita] = useState({});\n  const [isEnable, setIsEnable] = useState(true);\n\n  // Maneja los cambios en las respuestas\n  const onChange = e => {\n    const obj = {\n      ...cita,\n      [e.target.name]: e.target.value\n    };\n    setCita(obj);\n\n    // Valida si todas las respuestas han sido contestadas\n    const allResponsesFilled = Object.keys(obj).length === 13;\n    setIsEnable(!allResponsesFilled);\n  };\n\n  // Envía el formulario\n  const onSubmit = async () => {\n    try {\n      Swal.fire({\n        title: \"Enviando respuestas...\",\n        didOpen: () => Swal.showLoading()\n      });\n\n      // Envía las respuestas al servidor\n      await axios.post(\"http://localhost:4000/save-answers\", cita);\n      Swal.fire(\"¡Respuestas almacenadas con éxito!\", \"\", \"success\").then(() => window.location.reload());\n    } catch (error) {\n      var _error$response, _error$response$data;\n      Swal.fire(\"¡Ocurrió un error al guardar tus respuestas!\", ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || error.message, \"error\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title\",\n          children: /*#__PURE__*/_jsxDEV(Card.Title, {\n            children: \"Encuesta servicios escolares\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          children: [Array.from({\n            length: 13\n          }, (_, i) => /*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: `${i + 1}. ${getQuestionText(i + 1)}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), [\"Excelente\", \"Bueno\", \"Neutro\", \"Malo\"].map((option, index) => /*#__PURE__*/_jsxDEV(Form.Check, {\n              type: \"radio\",\n              label: `${String.fromCharCode(97 + index)}) ${option}`,\n              name: `respuesta${i + 1}`,\n              value: option,\n              onChange: onChange\n            }, `${i}-${index}`, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this))]\n          }, `q-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(Row, {\n            className: \"text-center mt-3\",\n            children: /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onSubmit,\n                disabled: isEnable,\n                variant: \"primary\",\n                children: \"Enviar\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n// Función para obtener el texto de las preguntas\n_s(Integradora, \"Jj3TLwNGPVMQxzT5nxwbX2vH9hs=\");\n_c = Integradora;\nfunction getQuestionText(questionNumber) {\n  const questions = [\"Nombre y correo\", \"Función que ejerces en la institución\", \"¿Qué opinas del maestro1?\", \"¿Qué opinas del maestro2?\", \"¿Qué opinas de las instalaciones de la universidad?\", \"¿Cómo te ha tratado el personal docente?\", \"¿Cómo te ha tratado la persona responsable de cajas?\", \"¿Cómo te ha tratado la persona responsable de seguridad y servicios?\", \"¿Cómo te ha tratado el personal docente servicios?\", \"¿Consideras que el proceso de inscripción es eficiente?\", \"¿Cómo calificarías la atención en las oficinas de servicios escolares?\", \"¿Te parecen adecuados los horarios de atención al público?\", \"¿Qué mejoras sugerirías en los servicios escolares?\"];\n  return questions[questionNumber - 1];\n}\nexport default Integradora;\nvar _c;\n$RefreshReg$(_c, \"Integradora\");","map":{"version":3,"names":["Card","Container","Form","Row","Col","Button","useState","axios","Swal","jsxDEV","_jsxDEV","Integradora","_s","cita","setCita","isEnable","setIsEnable","onChange","e","obj","target","name","value","allResponsesFilled","Object","keys","length","onSubmit","fire","title","didOpen","showLoading","post","then","window","location","reload","error","_error$response","_error$response$data","response","data","message","children","Body","className","Title","fileName","_jsxFileName","lineNumber","columnNumber","Array","from","_","i","Group","Label","getQuestionText","map","option","index","Check","type","label","String","fromCharCode","onClick","disabled","variant","_c","questionNumber","questions","$RefreshReg$"],"sources":["C:/Users/PC/Documents/4 cuatrimestre/Aplicacion web/ProyectoEncuetas/Encuesta4.1/Encuesta/frontend/src/compontentes/integradora.js"],"sourcesContent":["import \"../Estilos/integradora.css\"; // Importa los estilos correctamente\r\nimport { Card, Container, Form, Row, Col, Button } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport axios from \"axios\";\r\nimport Swal from \"sweetalert2\";\r\n\r\nfunction Integradora() {\r\n  const [cita, setCita] = useState({});\r\n  const [isEnable, setIsEnable] = useState(true);\r\n\r\n  // Maneja los cambios en las respuestas\r\n  const onChange = (e) => {\r\n    const obj = { ...cita, [e.target.name]: e.target.value };\r\n    setCita(obj);\r\n\r\n    // Valida si todas las respuestas han sido contestadas\r\n    const allResponsesFilled = Object.keys(obj).length === 13;\r\n    setIsEnable(!allResponsesFilled);\r\n  };\r\n\r\n  // Envía el formulario\r\n  const onSubmit = async () => {\r\n    try {\r\n      Swal.fire({\r\n        title: \"Enviando respuestas...\",\r\n        didOpen: () => Swal.showLoading(),\r\n      });\r\n\r\n      // Envía las respuestas al servidor\r\n      await axios.post(\"http://localhost:4000/save-answers\", cita);\r\n\r\n      Swal.fire(\r\n        \"¡Respuestas almacenadas con éxito!\",\r\n        \"\",\r\n        \"success\"\r\n      ).then(() => window.location.reload());\r\n    } catch (error) {\r\n      Swal.fire(\r\n        \"¡Ocurrió un error al guardar tus respuestas!\",\r\n        error.response?.data?.message || error.message,\r\n        \"error\"\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Card>\r\n        <Card.Body>\r\n          <div className=\"title\">\r\n            <Card.Title>Encuesta servicios escolares</Card.Title>\r\n          </div>\r\n          <Form>\r\n            {Array.from({ length: 13 }, (_, i) => (\r\n              <Form.Group key={`q-${i}`}>\r\n                <Form.Label>{`${i + 1}. ${getQuestionText(i + 1)}`}</Form.Label>\r\n                {[\"Excelente\", \"Bueno\", \"Neutro\", \"Malo\"].map((option, index) => (\r\n                  <Form.Check\r\n                    key={`${i}-${index}`}\r\n                    type=\"radio\"\r\n                    label={`${String.fromCharCode(97 + index)}) ${option}`}\r\n                    name={`respuesta${i + 1}`}\r\n                    value={option}\r\n                    onChange={onChange}\r\n                  />\r\n                ))}\r\n              </Form.Group>\r\n            ))}\r\n            <Row className=\"text-center mt-3\">\r\n              <Col>\r\n                <Button\r\n                  onClick={onSubmit}\r\n                  disabled={isEnable}\r\n                  variant=\"primary\"\r\n                >\r\n                  Enviar\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    </Container>\r\n  );\r\n}\r\n\r\n// Función para obtener el texto de las preguntas\r\nfunction getQuestionText(questionNumber) {\r\n  const questions = [\r\n    \"Nombre y correo\",\r\n    \"Función que ejerces en la institución\",\r\n    \"¿Qué opinas del maestro1?\",\r\n    \"¿Qué opinas del maestro2?\",\r\n    \"¿Qué opinas de las instalaciones de la universidad?\",\r\n    \"¿Cómo te ha tratado el personal docente?\",\r\n    \"¿Cómo te ha tratado la persona responsable de cajas?\",\r\n    \"¿Cómo te ha tratado la persona responsable de seguridad y servicios?\",\r\n    \"¿Cómo te ha tratado el personal docente servicios?\",\r\n    \"¿Consideras que el proceso de inscripción es eficiente?\",\r\n    \"¿Cómo calificarías la atención en las oficinas de servicios escolares?\",\r\n    \"¿Te parecen adecuados los horarios de atención al público?\",\r\n    \"¿Qué mejoras sugerirías en los servicios escolares?\",\r\n  ];\r\n  return questions[questionNumber - 1];\r\n}\r\n\r\nexport default Integradora;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}