{"ast":null,"code":"import express from \"express\";\nimport mongoose from \"mongoose\";\nimport { datesmodels } from \"./datesmodels.js\"; // Asegúrate de que este archivo esté bien configurado\n\nconst app = express();\napp.use(express.json());\nmongoose.connect(\"mongodb://localhost:27017/integradora\", {\n  useNewUrlParser: true,\n  useUnifiedTopology: true\n}).then(() => {\n  console.log(\"Conexión a MongoDB establecida\");\n}).catch(error => {\n  console.error(\"Error de conexión a MongoDB:\", error);\n});\napp.get(\"/\", (req, res) => {\n  res.send(\"Hola desde mi servidor\");\n});\napp.post(\"/create\", async (req, res) => {\n  const {\n    respuesta1,\n    respuesta2,\n    respuesta3,\n    respuesta4,\n    respuesta5,\n    respuesta6\n  } = req.body;\n  if (!respuesta1 || !respuesta2 || !respuesta3 || !respuesta4 || !respuesta5 || !respuesta6) {\n    return res.status(400).json({\n      msg: \"Necesitamos todos los datos\"\n    });\n  }\n  const obj = {\n    respuesta1,\n    respuesta2,\n    respuesta3,\n    respuesta4,\n    respuesta5,\n    respuesta6\n  };\n  try {\n    await datesmodels.create(obj);\n    return res.status(200).json({\n      msg: \"Citas exitosas\"\n    });\n  } catch (error) {\n    return res.status(500).json({\n      msg: \"Error al crear la cita\",\n      error\n    });\n  }\n});\napp.get(\"/drop\", async (req, res) => {\n  try {\n    const data = await datesmodels.find();\n    return res.json(data);\n  } catch (error) {\n    res.status(500).send(error);\n  }\n});\napp.listen(4000, () => {\n  console.log(\"Servidor en línea en el puerto 4000\");\n});","map":{"version":3,"names":["express","mongoose","datesmodels","app","use","json","connect","useNewUrlParser","useUnifiedTopology","then","console","log","catch","error","get","req","res","send","post","respuesta1","respuesta2","respuesta3","respuesta4","respuesta5","respuesta6","body","status","msg","obj","create","data","find","listen"],"sources":["C:/Users/PC/Documents/4 cuatrimestre/Aplicacion web/ProyectoEncuetas/Encuesta4.1/Encuesta/frontend/src/index.js"],"sourcesContent":["import express from \"express\";\r\nimport mongoose from \"mongoose\";\r\nimport { datesmodels } from \"./datesmodels.js\"; // Asegúrate de que este archivo esté bien configurado\r\n\r\nconst app = express();\r\napp.use(express.json());\r\n\r\nmongoose.connect(\"mongodb://localhost:27017/integradora\", {\r\n  useNewUrlParser: true,\r\n  useUnifiedTopology: true,\r\n})\r\n.then(() => {\r\n  console.log(\"Conexión a MongoDB establecida\");\r\n})\r\n.catch((error) => {\r\n  console.error(\"Error de conexión a MongoDB:\", error);\r\n});\r\n\r\napp.get(\"/\", (req, res) => {\r\n  res.send(\"Hola desde mi servidor\");\r\n});\r\n\r\napp.post(\"/create\", async (req, res) => {\r\n  const { respuesta1, respuesta2, respuesta3, respuesta4, respuesta5, respuesta6 } = req.body;\r\n\r\n  if (!respuesta1 || !respuesta2 || !respuesta3 || !respuesta4 || !respuesta5 || !respuesta6) {\r\n    return res.status(400).json({\r\n      msg: \"Necesitamos todos los datos\",\r\n    });\r\n  }\r\n\r\n  const obj = {\r\n    respuesta1,\r\n    respuesta2,\r\n    respuesta3,\r\n    respuesta4,\r\n    respuesta5,\r\n    respuesta6,\r\n  };\r\n\r\n  try {\r\n    await datesmodels.create(obj);\r\n    return res.status(200).json({\r\n      msg: \"Citas exitosas\",\r\n    });\r\n  } catch (error) {\r\n    return res.status(500).json({\r\n      msg: \"Error al crear la cita\",\r\n      error,\r\n    });\r\n  }\r\n});\r\n\r\napp.get(\"/drop\", async (req, res) => {\r\n  try {\r\n    const data = await datesmodels.find();\r\n    return res.json(data);\r\n  } catch (error) {\r\n    res.status(500).send(error);\r\n  }\r\n});\r\n\r\napp.listen(4000, () => {\r\n  console.log(\"Servidor en línea en el puerto 4000\");\r\n});\r\n"],"mappings":"AAAA,OAAOA,OAAO,MAAM,SAAS;AAC7B,OAAOC,QAAQ,MAAM,UAAU;AAC/B,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;;AAEhD,MAAMC,GAAG,GAAGH,OAAO,CAAC,CAAC;AACrBG,GAAG,CAACC,GAAG,CAACJ,OAAO,CAACK,IAAI,CAAC,CAAC,CAAC;AAEvBJ,QAAQ,CAACK,OAAO,CAAC,uCAAuC,EAAE;EACxDC,eAAe,EAAE,IAAI;EACrBC,kBAAkB,EAAE;AACtB,CAAC,CAAC,CACDC,IAAI,CAAC,MAAM;EACVC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAC;AAC/C,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;EAChBH,OAAO,CAACG,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;AACtD,CAAC,CAAC;AAEFV,GAAG,CAACW,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,wBAAwB,CAAC;AACpC,CAAC,CAAC;AAEFd,GAAG,CAACe,IAAI,CAAC,SAAS,EAAE,OAAOH,GAAG,EAAEC,GAAG,KAAK;EACtC,MAAM;IAAEG,UAAU;IAAEC,UAAU;IAAEC,UAAU;IAAEC,UAAU;IAAEC,UAAU;IAAEC;EAAW,CAAC,GAAGT,GAAG,CAACU,IAAI;EAE3F,IAAI,CAACN,UAAU,IAAI,CAACC,UAAU,IAAI,CAACC,UAAU,IAAI,CAACC,UAAU,IAAI,CAACC,UAAU,IAAI,CAACC,UAAU,EAAE;IAC1F,OAAOR,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACrB,IAAI,CAAC;MAC1BsB,GAAG,EAAE;IACP,CAAC,CAAC;EACJ;EAEA,MAAMC,GAAG,GAAG;IACVT,UAAU;IACVC,UAAU;IACVC,UAAU;IACVC,UAAU;IACVC,UAAU;IACVC;EACF,CAAC;EAED,IAAI;IACF,MAAMtB,WAAW,CAAC2B,MAAM,CAACD,GAAG,CAAC;IAC7B,OAAOZ,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACrB,IAAI,CAAC;MAC1BsB,GAAG,EAAE;IACP,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOd,KAAK,EAAE;IACd,OAAOG,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACrB,IAAI,CAAC;MAC1BsB,GAAG,EAAE,wBAAwB;MAC7Bd;IACF,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEFV,GAAG,CAACW,GAAG,CAAC,OAAO,EAAE,OAAOC,GAAG,EAAEC,GAAG,KAAK;EACnC,IAAI;IACF,MAAMc,IAAI,GAAG,MAAM5B,WAAW,CAAC6B,IAAI,CAAC,CAAC;IACrC,OAAOf,GAAG,CAACX,IAAI,CAACyB,IAAI,CAAC;EACvB,CAAC,CAAC,OAAOjB,KAAK,EAAE;IACdG,GAAG,CAACU,MAAM,CAAC,GAAG,CAAC,CAACT,IAAI,CAACJ,KAAK,CAAC;EAC7B;AACF,CAAC,CAAC;AAEFV,GAAG,CAAC6B,MAAM,CAAC,IAAI,EAAE,MAAM;EACrBtB,OAAO,CAACC,GAAG,CAAC,qCAAqC,CAAC;AACpD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}